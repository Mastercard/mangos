name: "Build MANGOS"

on:
  - push

jobs:
  build:
    strategy:
      matrix:
        profiles:
          - verity-full,docker-ext
          - verity-full,docker
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.9.1
      - name: setup-mkosi
        uses: sorenisanerd/mkosi@main
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dsaltares/fetch-gh-release-asset@master
        id: tools-fetch
        with:
          repo: ${{ github.repository_owner }}/mangos-tools
          version: latest
          file: 'mangos\.tools_.*\.tar\.zst.*'
          regex: true
          target: 'dl/'
      - name: Verify tools signature
        env:
          tag: ${{ steps.tools-fetch.outputs.version }}
        run: |
          cosign verify-blob  --bundle dl/mangos.tools_*.tar.zst.sigbundle \
                              --certificate-identity "${{ github.server_url }}/${{ github.repository_owner }}/mangos-tools/.github/workflows/build.yml@refs/tags/${tag}" \
                              --certificate-oidc-issuer "https://token.actions.githubusercontent.com" \
                              dl/mangos.tools_*.tar.zst
      - name: Decompress and stage tools
        run: mkdir mkosi.tools ; tar -x --zstd -f dl/mangos.tools_*.tar.zst -C mkosi.tools
      - name: Inject key and cert
        env:
          MANGOS_CERT: ${{ vars.MANGOS_CERT }}
          MANGOS_KEY: ${{ secrets.MANGOS_KEY }}
        run: |
          set -e
          if [ -z "${MANGOS_CERT}" ] || [ -z "${MANGOS_KEY}" ]; then
              echo '::warning title=Missing keys::`MANGOS_CERT` or `MANGOS_KEY` was not set. Generating temporary keys.'
              echo '`MANGOS_CERT` or `MANGOS_KEY` was not set. Build performed with ephemeral keys.' >> ${GITHUB_STEP_SUMMARY}
              mkosi genkey
              exit 0
          fi
          cat <<EOF > mkosi.crt
          $MANGOS_CERT
          EOF
          umask 077
          cat <<EOF > mkosi.key
          $MANGOS_KEY
          EOF
      - name: Run mkosi
        env:
          profiles: ${{ matrix.profiles }}
          MANGOS_GITHUB_URL: ${{ github.server_url }}/${{ github.repository }}
        run: |
          mkosi -E RUNNER_ENVIRONMENT --debug --profile= --profile="${profiles}"
          mkosi -E RUNNER_ENVIRONMENT --debug --profile= --profile="${profiles},installer"
      - name: List built artifacts
        run: find out/
      - name: Export image version for later steps
        run: echo IMAGE_VERSION="$(./mkosi.version)" >> $GITHUB_ENV
      - name: Test it
        run: |
          #!/bin/bash
          set -x
          set -e

          # mkosi doesn't pick this up from the tools dir for some reason
          sudo apt-get install -y ovmf
          ./run_tests.sh
          exit $?

      - name: Remove symlinks
        run: find out/ -type l -delete
      - name: Compress artifacts
        run: |
          shopt -s nullglob
          for file in out/mangos{,-installer}_${IMAGE_VERSION}.{raw,efi} out/docker*_${IMAGE_VERSION}.raw
          do
              zstd --rm "$file"
          done
#      - name: Sign artifacts
#        run: for file in out/mangos* ; do cosign sign-blob -d -y --bundle "${file}.sigbundle" "${file}" > /dev/null; done
      - name: Upload build artifact (disk)
        id: upload-disk
        uses: actions/upload-artifact@v4
        with:
          path: |
            out/mangos_${{ env.IMAGE_VERSION }}.efi.zst
            out/mangos_${{ env.IMAGE_VERSION }}.root-x86-64.*.zst
            out/mangos_${{ env.IMAGE_VERSION }}.root-x86-64-verity.*.zst
            out/mangos_${{ env.IMAGE_VERSION }}.root-x86-64-verity-sig.*.zst
            out/mangos_${{ env.IMAGE_VERSION }}.raw.zst
            out/mangos_${{ env.IMAGE_VERSION }}.cyclonedx.json
            out/mangos_${{ env.IMAGE_VERSION }}.github.json
            out/mangos_${{ env.IMAGE_VERSION }}.spdx.json
            out/mangos_${{ env.IMAGE_VERSION }}.syft.json
            out/mangos_${{ env.IMAGE_VERSION }}.manifest
            out/docker*_${{ env.IMAGE_VERSION }}.raw.zst
            out/mangos-installer_${{ env.IMAGE_VERSION }}.raw.zst
            out/mangos-installer_${{ env.IMAGE_VERSION }}.cyclonedx.json
            out/mangos-installer_${{ env.IMAGE_VERSION }}.github.json
            out/mangos-installer_${{ env.IMAGE_VERSION }}.spdx.json
            out/mangos-installer_${{ env.IMAGE_VERSION }}.syft.json
          name: mangos.${{ matrix.profiles }}

  release:
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Rename artifacts
        run: |
          mkdir release

          mv artifacts/mangos.verity-full,docker-ext/* release/
          for f in artifacts/mangos.verity-full,docker/* ; do
            mv "$f" "release/mangos+docker_$(basename $f | cut -f2- -d_)"
          done
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: release/*
