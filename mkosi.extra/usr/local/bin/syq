#!/usr/bin/env python3

# syq - Simply YAML Query

import yaml
import sys
import argparse
from pathlib import Path

def get_value_by_path(data, path):
    """Extract a value from nested dictionaries using dot notation path."""
    keys = path.split('.')
    current = data
    
    for key in keys:
        if isinstance(current, dict) and key in current:
            current = current[key]
        elif isinstance(current, list) and key.isdigit() and int(key) < len(current):
            current = current[int(key)]
        else:
            return None
    
    return current

def main():
    # Set up argument parser
    parser = argparse.ArgumentParser(description='Simple YAML query tool')
    parser.add_argument('path', help='Path to the value (dot notation, e.g., "services.database")')
    parser.add_argument('file', nargs='?', help='YAML file to read (defaults to stdin)')
    args = parser.parse_args()
    
    # Read from file or stdin
    try:
        if args.file:
            with open(args.file, 'r') as f:
                data = yaml.safe_load(f)
        else:
            data = yaml.safe_load(sys.stdin)
    except yaml.YAMLError as e:
        print(f"Error parsing YAML: {e}", file=sys.stderr)
        return 1
    except Exception as e:
        print(f"Error reading input: {e}", file=sys.stderr)
        return 1
    
    # Get value from path
    value = get_value_by_path(data, args.path)
    
    # Output value
    if value is None:
        return 1
    
    # Handle different types of output
    if isinstance(value, (dict, list)):
        print(yaml.dump(value, default_flow_style=False), end='')
    else:
        print(value)
    
    return 0

if __name__ == "__main__":
    sys.exit(main())
