#!/bin/sh

install_source="$(systemd-creds cat mangos_install_source 2> /dev/null)"
install_target="$(systemd-creds cat mangos_install_target 2> /dev/null)"

while [ $# -gt 0 ]
do
    case "$1" in
        -h|--help)
            echo 'usage: mangos-install [BLOCK_DEVICE|ask]'
            echo
            echo 'Downloads and installs MANGOS onto BLOCK_DEVICE.'
            echo
            echo 'If called without arguments or with a single argument "ask",'
            echo 'a dialog will be presented with a list of detected block devices.'
            exit 0
            ;;
        -s)
            install_source="$2"
            shift 2
            ;;
        -n|--dry-run)
            echo="/bin/echo --"
            shift
            ;;
        *)
            install_target=$1
            shift
            ;;
    esac
done

if [ -z "${install_target}" ]
then
    target="$(sed -e 's%.*mangos_install_target=\([^ ]\+\).*%\1%' /proc/cmdline)"
    if [ -n "${target}" ]
    then
        install_target="${target}"
    fi
fi

install_target="${install_target:-ask}"

if [ "${install_target}" = "ask" ]
then
        if ! lsblk -p -o TYPE,NAME,SIZE,VENDOR,MODEL,SERIAL -l | grep ^disk | cut -f2- -d' ' | sed -e 's/ \+/ /g' | while read bdev info; do /bin/echo -e "$bdev\x00$info\x00" ; done | tr -d '\n' | xargs -0 whiptail --menu "Install target" 15 50 0 2> /tmp/mangos_install_target
        then
                echo "Install cancelled"
                exit 1
        fi
        install_target="$(cat /tmp/mangos_install_target ; rm /tmp/mangos_install_target)"
fi

if [ -z "${install_source}" ]
then
    source="$(sed -e 's%.*mangos_install_source=\([^ ]\+\).*%\1%' /proc/cmdline)"
    if [ -n "${source}" ]
    then
        install_source="${source}"
    fi
fi

if [ -z "${install_source}" ]
then
    . /etc/os-release

    install_source="${MANGOS_GITHUB_URL}/releases/download/v${IMAGE_VERSION}/mangos_${IMAGE_VERSION}.raw.zst"
fi

$echo /usr/lib/systemd/systemd-pull --force --verify=no --roothash=no --verity=no --direct raw "${install_source}" "$install_target"

$echo sgdisk -p "${install_target}"
$echo sgdisk -v "${install_target}"
# -e: There are two copies of the GPT on a block device. One at the
#     start and one at the end. Since the image and the device are
#     unlikely to be the exact same size, we need to put a new copy at
#     the end.
# -U: Set disk GUID
$echo sgdisk -e \
    -U "$(systemd-id128 new -u)" \
    -u "1:$(systemd-id128 new -u)" \
    -p "${install_target}" \

$echo sgdisk -v "${install_target}"
sync ; sync

mount "${install_target}5" /mnt
mount "${install_target}1" /mnt/boot

# Add ip= kernel arg to grub config
ip_arg="$(grep -oE 'ip=[^ ]+' /proc/cmdline)"
nameserver_arg="$(grep -oE 'nameserver=[^ ]+' /proc/cmdline)"

sed -e "s%^.*linux .*%& ${ip_arg} ${nameserver_arg}%g" -i /mnt/boot/grub/grub.cfg

touch /dev/shm/entry-token
mount -o bind /dev/shm/entry-token /mnt/etc/kernel/entry-token
bootctl install --root=/mnt --variables=yes
umount /mnt/etc/kernel/entry-token
umount /mnt/boot
umount /mnt
sync ; sync
